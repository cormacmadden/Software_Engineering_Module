@page "/weather"

@inject IHttpClientFactory _clientFactory 

<h3>WeatherData</h3>
@if (string.IsNullOrWhiteSpace(errorString) == false)
{
    <div class="h2">@errorString</div>
}
else if (rootobject is null)
{
<div class="h4"> Loading...</div>
}
else
{
    <table class = "table table=striped">
        <thead class="thead-dark"  >
            <tr>
                <th>Date</th>
                <th>Weather State</th>
                <th>High</th>
                <th>Low</th>
            </tr>
        </thead>
        <tbody>
              <tr>
                  <td>
                      @rootobject.name;
                  </td>
              </tr>
        </tbody>
    </table>
}

@code {
    Rootobject rootobject;
    string errorString;

    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get,
            "https://api.github.com/users/defunkt");

        var client = _clientFactory.CreateClient();

        HttpResponseMessage response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            rootobject = await response.Content.ReadFromJsonAsync<Rootobject>();
            errorString = null;
        }
        else
        {
            errorString = $"There was an error getting our forecast: {response.ReasonPhrase}";
        }
    }
}
